{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","bind","fetch","then","response","json","users","setState","e","this","target","value","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAGaA,EAAO,SAACC,GAAD,OAEZ,sBAAKC,UAAU,iBAAf,UACA,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,mCAAOL,EAAMI,QAAQE,KAArB,OACA,4BAAKN,EAAMI,QAAQG,YCJdC,EAAW,SAAAR,GAEpB,OAAO,qBAAKC,UAAU,YAAf,SAEHD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACxB,cAAC,EAAD,CAA2BA,QAAYA,GAAzBA,EAAQC,UCLnBM,G,YAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,uBACEZ,UAAU,SACVa,KAAK,SACJF,YAAcA,EAEjBG,SAAYF,MC+DDG,E,kDAnEb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CAEXR,SAAU,GACVS,YAAY,IAId,EAAKL,aAAa,EAAKA,aAAaM,KAAlB,gBATN,E,qDA8Bd,WAAqB,IAAD,OAClBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAAEhB,SAAUe,S,0BAK3C,SAAaE,GACXC,KAAKF,SAAS,CAAEP,YAAaQ,EAAEE,OAAOC,U,oBAGxC,WAAU,IAAD,EAC2BF,KAAKV,MAA/BR,EADD,EACCA,SAAUS,EADX,EACWA,YAGZY,EAAmBrB,EAASsB,QAAO,SAAA3B,GAAO,OAC9CA,EAAQE,KAAK0B,cAAcC,SAASf,EAAYc,kBAGlD,OAEE,sBAAK/B,UAAU,MAAf,UAEA,oBAAIA,UAAY,KAAhB,6BACA,cAAC,EAAD,CACAW,YAAY,kBAEZC,aAAcc,KAAKd,eACnB,cAAC,EAAD,CAAUJ,SAAWqB,W,GA5DTI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.daa4bd24.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\n\r\nexport const Card = (props) => (\r\n\r\n        <div className='card-container'>\r\n        <img alt='monster' src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\r\n        <h2> { props.monster.name } </h2>\r\n        <p>{ props.monster.email }</p>\r\n        </div>\r\n    \r\n);","import React from 'react';\r\nimport './card-list.style.css';\r\nimport { Card } from '../card/card.component';\r\n\r\nexport const CardList = props => {\r\n    // console.log(props);\r\n    return <div className='card-list'>\r\n    {\r\n        props.monsters.map(monster => ( \r\n          <Card key = { monster.id } monster = { monster } />\r\n          ))}\r\n   \r\n    </div>;\r\n}","import React from 'react';\r\nimport './search-box.styles.css';\r\n\r\n\r\nexport const SearchBox = ({ placeholder, handleChange}) => (\r\n    <input \r\n      className='search'\r\n      type='search'\r\n       placeholder= {placeholder} \r\n    //    ocChange = {e => this.setState({ searchField:e.target.value })}\r\n    onChange = {handleChange}\r\n      />\r\n\r\n)","import React, { Component } from 'react';\nimport { CardList } from './components/card-list/card-list.component';\nimport './App.css';\nimport { SearchBox } from './components/search-box/search-box.component';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n\n      monsters: [],\n      searchField:''\n\n    };\n\n    this.handleChange=this.handleChange.bind(this);\n\n  }\n        // {\n        // name: 'Frankenstein',\n        // id: 'asc1'\n        // },\n        // {\n        //   name: 'Dracula',\n        //   id:'asr2'\n\n        //   },\n        //   {\n        //     name: 'Zombie',\n        //     id:'as1w'\n        //     }\n      // \n     \n\n  \n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({ monsters: users}));\n    // console.log(response)\n    \n  }\n\n  handleChange(e) {\n    this.setState({ searchField: e.target.value})\n  }\n  \n  render() {\n    const { monsters, searchField } = this.state;\n    // const monsters  = this.state.monsters;\n    // const searchField = this.state.searchField;\n    const filteredMonsters = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n      );\n\n    return(\n\n      <div className='App'>\n      \n      <h1 className = 'h1'> Monster Roldex</h1>\n      <SearchBox \n      placeholder='search monsters'\n      // handleChange={ e => this.setState({searchField:e.target.value })} />\n      handleChange={this.handleChange} />\n      <CardList monsters={ filteredMonsters } />\n     \n    \n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}